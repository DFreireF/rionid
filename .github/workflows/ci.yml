name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        python-version: ${{ matrix.python-version }}
        use-mamba: true
    - name: Install Mamba
      run: |
        conda install mamba -c conda-forge

    - name: Create mamba environment
      run: |
        mamba create -n my_env
    - name: Set up mamba and ROOT
      run: |
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        conda activate my_env
        mamba install -c conda-forge root -y
        
    - name: Install more dependencies
      run: |
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        conda activate my_env
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install toml
        pip install .
    - name: Clone iqtools
      run: |
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        conda activate my_env
        git clone https://$PAT@github.com/xaratustrah/iqtools.git
        python -m pip install --upgrade pip
        python -m pip install -r iqtools/requirements.txt
        python -m pip install iqtools/.
      env:
        PAT: ${{ secrets.PAT }}

    - name: Clone barion
      run: |
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        conda activate my_env
        git clone https://"$PAT"@github.com/xaratustrah/barion.git
        python -m pip install -r barion/requirements.txt
        python -m pip install barion/.
      env:
        PAT: ${{ secrets.PAT }}
    - name: Decrypt csv data file
      run: gpg --quiet --batch --yes --decrypt --passphrase="$CSV_PASS" --output tests/test_data.csv tests/test_data.csv.gpg
      env:
        CSV_PASS: ${{ secrets.CSV_PASS }}

    - name: Decrypt lpp data file
      run: gpg --quiet --batch --yes --decrypt --passphrase="$LPP_PASS" --output tests/test_data.lpp tests/test_data.lpp.gpg
      env:
        LPP_PASS: ${{ secrets.LPP_PASS }}

    - name: Test with pytest
      run: |
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        conda activate my_env
        pip install pytest
        pytest


    

